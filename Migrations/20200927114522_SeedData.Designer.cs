// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using dotnet_rpg.Data;

namespace dotnet_rpg.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20200927114522_SeedData")]
    partial class SeedData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7");

            modelBuilder.Entity("dotnet_rpg.Models.Character", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Class")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Defense")
                        .HasColumnType("INTEGER");

                    b.Property<int>("HitPoints")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Intelligence")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("Strength")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Characters");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Class = 1,
                            Defense = 10,
                            HitPoints = 100,
                            Intelligence = 15,
                            Name = "Frodo",
                            Strength = 10,
                            UserId = 2
                        },
                        new
                        {
                            Id = 2,
                            Class = 1,
                            Defense = 10,
                            HitPoints = 100,
                            Intelligence = 13,
                            Name = "Samwise",
                            Strength = 12,
                            UserId = 3
                        },
                        new
                        {
                            Id = 3,
                            Class = 1,
                            Defense = 20,
                            HitPoints = 200,
                            Intelligence = 10,
                            Name = "Boromir",
                            Strength = 25,
                            UserId = 3
                        });
                });

            modelBuilder.Entity("dotnet_rpg.Models.CharacterSkill", b =>
                {
                    b.Property<int>("CharacterId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SkillId")
                        .HasColumnType("INTEGER");

                    b.HasKey("CharacterId", "SkillId");

                    b.HasIndex("SkillId");

                    b.ToTable("CharacterSkills");

                    b.HasData(
                        new
                        {
                            CharacterId = 1,
                            SkillId = 2
                        },
                        new
                        {
                            CharacterId = 1,
                            SkillId = 4
                        },
                        new
                        {
                            CharacterId = 2,
                            SkillId = 1
                        },
                        new
                        {
                            CharacterId = 2,
                            SkillId = 2
                        },
                        new
                        {
                            CharacterId = 3,
                            SkillId = 2
                        },
                        new
                        {
                            CharacterId = 3,
                            SkillId = 3
                        },
                        new
                        {
                            CharacterId = 3,
                            SkillId = 5
                        });
                });

            modelBuilder.Entity("dotnet_rpg.Models.Skill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Damage")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Skills");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Damage = 10,
                            Name = "Trimming the verge"
                        },
                        new
                        {
                            Id = 2,
                            Damage = 20,
                            Name = "Flurry"
                        },
                        new
                        {
                            Id = 3,
                            Damage = 45,
                            Name = "Blow the Horn of Gondor"
                        },
                        new
                        {
                            Id = 4,
                            Damage = 10,
                            Name = "Look pained"
                        },
                        new
                        {
                            Id = 5,
                            Damage = 300,
                            Name = "Be the best character"
                        });
                });

            modelBuilder.Entity("dotnet_rpg.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("BLOB");

                    b.Property<int>("UserRole")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Username")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PasswordHash = new byte[] { 125, 91, 148, 89, 35, 162, 170, 132, 237, 207, 161, 191, 238, 22, 43, 175, 187, 60, 235, 89, 115, 69, 86, 182, 245, 187, 201, 44, 111, 186, 68, 169, 220, 34, 172, 140, 60, 250, 157, 236, 183, 164, 229, 117, 115, 22, 69, 246, 253, 28, 19, 103, 61, 155, 188, 75, 41, 105, 139, 26, 87, 210, 92, 96 },
                            PasswordSalt = new byte[] { 54, 23, 58, 171, 12, 169, 232, 68, 220, 48, 223, 68, 247, 11, 134, 82, 176, 119, 195, 35, 74, 177, 97, 16, 220, 46, 139, 43, 145, 144, 232, 118, 179, 27, 254, 195, 26, 3, 83, 40, 74, 132, 9, 170, 142, 57, 19, 77, 122, 55, 8, 121, 1, 163, 159, 53, 97, 27, 85, 152, 5, 86, 61, 34, 39, 49, 179, 172, 119, 102, 16, 57, 179, 115, 212, 197, 170, 89, 179, 210, 228, 174, 239, 231, 255, 1, 6, 181, 25, 57, 240, 228, 76, 171, 82, 153, 186, 48, 213, 7, 215, 174, 135, 178, 170, 150, 197, 240, 20, 60, 13, 224, 168, 133, 144, 153, 179, 55, 41, 49, 97, 174, 28, 126, 8, 54, 73, 180 },
                            UserRole = 1,
                            Username = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            PasswordHash = new byte[] { 125, 91, 148, 89, 35, 162, 170, 132, 237, 207, 161, 191, 238, 22, 43, 175, 187, 60, 235, 89, 115, 69, 86, 182, 245, 187, 201, 44, 111, 186, 68, 169, 220, 34, 172, 140, 60, 250, 157, 236, 183, 164, 229, 117, 115, 22, 69, 246, 253, 28, 19, 103, 61, 155, 188, 75, 41, 105, 139, 26, 87, 210, 92, 96 },
                            PasswordSalt = new byte[] { 54, 23, 58, 171, 12, 169, 232, 68, 220, 48, 223, 68, 247, 11, 134, 82, 176, 119, 195, 35, 74, 177, 97, 16, 220, 46, 139, 43, 145, 144, 232, 118, 179, 27, 254, 195, 26, 3, 83, 40, 74, 132, 9, 170, 142, 57, 19, 77, 122, 55, 8, 121, 1, 163, 159, 53, 97, 27, 85, 152, 5, 86, 61, 34, 39, 49, 179, 172, 119, 102, 16, 57, 179, 115, 212, 197, 170, 89, 179, 210, 228, 174, 239, 231, 255, 1, 6, 181, 25, 57, 240, 228, 76, 171, 82, 153, 186, 48, 213, 7, 215, 174, 135, 178, 170, 150, 197, 240, 20, 60, 13, 224, 168, 133, 144, 153, 179, 55, 41, 49, 97, 174, 28, 126, 8, 54, 73, 180 },
                            UserRole = 2,
                            Username = "Penny"
                        },
                        new
                        {
                            Id = 3,
                            PasswordHash = new byte[] { 125, 91, 148, 89, 35, 162, 170, 132, 237, 207, 161, 191, 238, 22, 43, 175, 187, 60, 235, 89, 115, 69, 86, 182, 245, 187, 201, 44, 111, 186, 68, 169, 220, 34, 172, 140, 60, 250, 157, 236, 183, 164, 229, 117, 115, 22, 69, 246, 253, 28, 19, 103, 61, 155, 188, 75, 41, 105, 139, 26, 87, 210, 92, 96 },
                            PasswordSalt = new byte[] { 54, 23, 58, 171, 12, 169, 232, 68, 220, 48, 223, 68, 247, 11, 134, 82, 176, 119, 195, 35, 74, 177, 97, 16, 220, 46, 139, 43, 145, 144, 232, 118, 179, 27, 254, 195, 26, 3, 83, 40, 74, 132, 9, 170, 142, 57, 19, 77, 122, 55, 8, 121, 1, 163, 159, 53, 97, 27, 85, 152, 5, 86, 61, 34, 39, 49, 179, 172, 119, 102, 16, 57, 179, 115, 212, 197, 170, 89, 179, 210, 228, 174, 239, 231, 255, 1, 6, 181, 25, 57, 240, 228, 76, 171, 82, 153, 186, 48, 213, 7, 215, 174, 135, 178, 170, 150, 197, 240, 20, 60, 13, 224, 168, 133, 144, 153, 179, 55, 41, 49, 97, 174, 28, 126, 8, 54, 73, 180 },
                            UserRole = 2,
                            Username = "Elise"
                        });
                });

            modelBuilder.Entity("dotnet_rpg.Models.Weapon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CharacterId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Damage")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId")
                        .IsUnique();

                    b.ToTable("Weapons");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CharacterId = 3,
                            Damage = 30,
                            Name = "Broadsword"
                        },
                        new
                        {
                            Id = 2,
                            CharacterId = 2,
                            Damage = 10,
                            Name = "Gardening shears"
                        },
                        new
                        {
                            Id = 3,
                            CharacterId = 1,
                            Damage = 20,
                            Name = "Sting"
                        });
                });

            modelBuilder.Entity("dotnet_rpg.Models.Character", b =>
                {
                    b.HasOne("dotnet_rpg.Models.User", "User")
                        .WithMany("Characters")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("dotnet_rpg.Models.CharacterSkill", b =>
                {
                    b.HasOne("dotnet_rpg.Models.Character", "Character")
                        .WithMany("CharacterSkills")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("dotnet_rpg.Models.Skill", "Skill")
                        .WithMany("CharacterSkills")
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("dotnet_rpg.Models.Weapon", b =>
                {
                    b.HasOne("dotnet_rpg.Models.Character", "Character")
                        .WithOne("Weapon")
                        .HasForeignKey("dotnet_rpg.Models.Weapon", "CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
